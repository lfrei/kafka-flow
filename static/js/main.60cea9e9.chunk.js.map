{"version":3,"sources":["components/Node.js","topology/topology-converter.js","topology/topology-compacter.js","topology/topology-layouter.js","topology/topic-extractor.js","kafka/offset-service.js","topology/topic-updater.js","topology/edge-updater.js","components/Flow.js","components/Toolbar.js","components/Header.js","kafka/topology-service.js","components/Settings.js","App.js","index.js"],"names":["Node","type","name","offset","showTooltip","length","showOffset","id","place","effect","border","borderColor","bottom","className","source","target","addOrReplaceTopic","elements","topic","index","findIndex","e","toIntermediateTopic","push","convertTopologyToFlow","topology","includeStores","processor","split","forEach","line","processorMatch","exec","map","state","replace","trim","data","label","addSinkTopic","addSourceTopic","store","some","element","exists","includes","addStore","addProcessor","streamMatch","addStream","getOutputTopics","start","outputTopics","edges","filter","isNode","findEdgesWithSource","ed","isOutputTopics","compactTopology","newEdges","getInputTopics","concat","horizontalLayout","dagreGraph","direction","dagre","graphlib","Graph","setDefaultEdgeLabel","setGraph","rankdir","initGraph","el","setNode","width","height","setEdge","layout","nodeWithPosition","node","targetPosition","sourcePosition","position","x","nodeWidth","Math","random","y","nodeHeight","getTopicsFromElements","url","a","fetch","getOffset","updateTopic","running","isRunning","updateElementData","style","background","updateElementStyle","updateTopics","findEdges","nodeName","updateEdges","animated","Flow","settings","onError","initialElements","useState","setElements","useEffect","newElements","topologyShowStores","topologyCompact","offsetCheck","setInterval","offsetUrl","then","response","json","catch","clearInterval","offsetInterval","Toolbar","onSetttingsClicked","onCompactClicked","isCompact","onClick","Header","onSettingChanged","history","useHistory","location","useLocation","pathname","getTopology","Settings","onChangeSetting","key","value","checked","htmlFor","rows","placeholder","onChange","topologyUrl","disabled","text","loadedTopology","App","example","simple","setSettings","message","toast","error","basename","process","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.60cea9e9.chunk.js","sourcesContent":["import './Node.css';\nimport ReactTooltip from 'react-tooltip';\n\nfunction Node({ type, name, offset }) {\n    const showTooltip = name.length > 26;\n    const showOffset = offset >= 0;\n\n    return (\n        <div>\n            {showTooltip &&\n                <ReactTooltip id={name}\n                    place=\"bottom\"\n                    effect=\"solid\"\n                    type=\"light\"\n                    border\n                    borderColor=\"lightgrey\"\n                    offset={{ bottom: 10 }}>\n\n                    <p>{name}</p>\n                </ReactTooltip>\n            }\n\n            <div className={type} data-tip data-for={name}>\n                {name}\n                {showOffset &&\n                    <span>:\n                        <div className=\"offset\">{offset}</div>\n                    </span>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Node;","import Node from '../components/Node.js';\n\nfunction id(source, target) {\n    return `${source}-${target}`;\n}\n\nfunction exists(elements, id) {\n    return elements.some(element => element.id === id);\n}\n\nfunction toIntermediateTopic(topic) {\n    return {\n        ...topic,\n        type: 'default',\n    }\n}\n\nfunction addOrReplaceTopic(elements, topic) {\n    let index = elements.findIndex(e => e.id === topic.id);\n\n    if (index !== -1) {\n        elements[index] = toIntermediateTopic(topic);\n    } else {\n        elements.push(topic);\n    }\n}\n\nfunction addSinkTopic(elements, processor, topic) {\n    addOrReplaceTopic(elements, {\n        id: topic,\n        type: 'output',\n        data: { label: <Node type='topic' name={topic} /> },\n    });\n    elements.push({ id: id(processor, topic), source: processor, target: topic });\n}\n\nfunction addSourceTopic(elements, processor, topic) {\n    addOrReplaceTopic(elements, {\n        id: topic,\n        type: 'input',\n        data: { label: <Node type='topic' name={topic} /> },\n    });\n    elements.push({ id: id(topic, processor), source: topic, target: processor });\n}\n\nfunction addStore(elements, processor, store) {\n    if (!exists(elements, store)) {\n        elements.push({\n            id: store,\n            type: 'output',\n            data: { label: <Node type='store' name={store} /> },\n        })\n    }\n\n    if (processor.includes(\"JOIN\")) {\n        elements.push({ id: id(store, processor), source: store, target: processor });\n    } else {\n        elements.push({ id: id(processor, store), source: processor, target: store });\n    }\n}\n\nfunction addProcessor(elements, processor) {\n    elements.push({\n        id: processor,\n        data: { label: <Node type='processor' name={processor} /> },\n    })\n}\n\nfunction addStream(elements, processor, target) {\n    if (target === 'none') {\n        return;\n    }\n\n    elements.push({ id: id(processor, target), source: processor, target: target });\n}\n\nfunction convertTopologyToFlow(topology, includeStores) {\n    let elements = [];\n    let processor;\n\n    topology.split('\\n').forEach(line => {\n\n        let processorMatch = /(Source:|Processor:|Sink:)\\s+(\\S+)\\s+\\((topics|topic|stores):(.*)\\)/.exec(line)\n\n        if (processorMatch) {\n            processor = processorMatch[2];\n            let type = processorMatch[3];\n            let states = processorMatch[4];\n\n            states.split(',')\n                .map(state => state.replace(/[[\\]]/g, '').trim())\n                .forEach(state => {\n\n                    if (state === '') {\n                        // short circuit\n                    }\n                    else if (type === 'topic') {\n                        addSinkTopic(elements, processor, state);\n                    }\n                    else if (type === 'topics') {\n                        addSourceTopic(elements, processor, state);\n                    }\n                    else if (type === 'stores' && includeStores) {\n                        addStore(elements, processor, state);\n                    }\n                });\n\n            addProcessor(elements, processor);\n\n            return;\n        }\n\n        let streamMatch = /-->\\s+(.*)$/.exec(line.trim());\n\n        if (streamMatch && processor) {\n            let targets = streamMatch[1];\n\n            targets.split(',')\n                .map(target => target.trim())\n                .forEach(target => {\n                    addStream(elements, processor, target);\n                });\n        }\n    })\n\n    return elements;\n}\n\nexport default convertTopologyToFlow;","import { isNode } from 'react-flow-renderer';\n\nfunction isOutputTopics(elements, topic) {\n    return elements\n        .filter(e => isNode(e))\n        .filter(e => e.id === topic)\n        .filter(e => e.type === 'output')\n        .length > 0;\n}\n\nfunction findEdgesWithSource(elements, source) {\n    return elements\n        .filter(e => !isNode(e))\n        .filter(e => e.source === source)\n}\n\nfunction getInputTopics(elements) {\n    return elements\n        .filter(e => e.type === 'input')\n        .map(e => e.id)\n}\n\nfunction getOutputTopics(elements, start) {\n    const outputTopics = [];\n    const edges = findEdgesWithSource(elements, start);\n\n    edges.forEach(ed => {\n        if (isOutputTopics(elements, ed.target)) {\n            outputTopics.push(ed.target);\n        } else {\n            outputTopics.push(...getOutputTopics(elements, ed.target))\n        }\n    });\n\n    return outputTopics;\n}\n\nfunction compactTopology(elements) {\n    const newEdges = [];\n\n    getInputTopics(elements).forEach(source => {\n        getOutputTopics(elements, source).forEach(target => {\n            newEdges.push({ id: `${source}-${target}`, source: source, target: target })\n        });\n    });\n\n    return elements\n        .filter(e => isNode(e))\n        .filter(e => e.type === 'input' || e.type === 'output')\n        .concat(newEdges)\n\n}\n\nexport default compactTopology;","import { isNode } from 'react-flow-renderer';\nimport dagre from 'dagre';\n\nconst initial = 50;\nconst nodeWidth = 180;\nconst nodeHeight = 50;\n\nfunction initGraph(direction = 'TB') {\n    const dagreGraph = new dagre.graphlib.Graph();\n\n    dagreGraph.setDefaultEdgeLabel(() => ({}));\n    dagreGraph.setGraph({ rankdir: direction });\n\n    return dagreGraph;\n}\n\nfunction horizontalLayout(elements) {\n    const dagreGraph = initGraph('LR');\n\n    elements.forEach((el) => {\n        if (isNode(el)) {\n            dagreGraph.setNode(el.id, { width: nodeWidth, height: nodeHeight });\n        } else {\n            dagreGraph.setEdge(el.source, el.target);\n        }\n    });\n\n    dagre.layout(dagreGraph);\n\n    return elements.map((el) => {\n        if (isNode(el)) {\n            const nodeWithPosition = dagreGraph.node(el.id);\n            el.targetPosition = 'left';\n            el.sourcePosition = 'right';\n            el.position = {\n                x: initial + nodeWithPosition.x - nodeWidth / 2 + Math.random() / 1000,\n                y: initial + nodeWithPosition.y - nodeHeight / 2,\n            };\n        }\n        return el;\n    });\n}\n\nexport default horizontalLayout;","function getTopicsFromElements(elements) {\n    return elements\n        .filter(el => el.type === 'input' || el.type === 'output')\n        .map(el => el.id);\n}\n\nexport default getTopicsFromElements;","async function getOffset(url, topic) {\n    return fetch(`${url}/${topic}`)\n}\n\nexport default getOffset;","import Node from '../components/Node.js';\n\nconst runningColor = '#D6D5E6';\nconst stoppedColor = '#fff';\n\nfunction isRunning(element, offset) {\n    return offset > element.data.offset;\n}\n\nfunction updateElementData(element, topic, offset, running) {\n    return {\n        ...element.data,\n        offset,\n        running,\n        label: <Node type='topic' name={topic} offset={offset}/>,\n    };\n}\n\nfunction updateElementStyle(element, running) {\n    return {\n        ...element.style,\n        background: running ? runningColor : stoppedColor,\n    };\n}\n\nfunction updateTopic(element, topic, offset) {\n    if (element.id === topic) {\n        let running = isRunning(element, offset);\n\n        element.data = updateElementData(element, topic, offset, running);\n        element.style = updateElementStyle(element, running);\n    }\n    return element;\n}\n\nfunction updateTopics(elements, topic, offset) {\n    return elements.map((element) => updateTopic(element, topic, offset));\n}\n\nexport default updateTopics;","import { isNode } from 'react-flow-renderer';\n\nfunction findEdges(elements, nodeName) {\n    let edges = [];\n\n    elements.forEach((el) => {\n        if (!isNode(el) && el.target === nodeName) {\n            edges.push(el.id);\n            edges.push(...findEdges(elements, el.source));\n        }\n    });\n\n    return edges;\n}\n\nfunction updateEdges(elements, topic) {\n    let edges = [];\n\n    elements.forEach((el) => {\n        if (isNode(el) && el.id === topic && el.data.running) {\n            edges.push(...findEdges(elements, el.id));\n        }\n    });\n\n    elements.forEach((el) => {\n        if (!isNode(el) && edges.includes(el.id)) {\n            el.animated = true;\n        } else {\n            el.animated = false;\n        }\n    });\n\n    return elements;\n}\n\nexport default updateEdges;","import './Flow.css';\nimport React, { useEffect, useState } from 'react';\nimport ReactFlow from 'react-flow-renderer';\nimport convertTopologyToFlow from '../topology/topology-converter.js';\nimport compactTopology from '../topology/topology-compacter.js';\nimport horizontalLayout from '../topology/topology-layouter.js';\nimport getTopicsFromElements from '../topology/topic-extractor.js';\nimport getOffset from \"../kafka/offset-service.js\";\nimport updateTopics from '../topology/topic-updater.js';\nimport updateEdges from '../topology/edge-updater.js';\n\nfunction Flow({ settings, onError }) {\n    const initialElements = horizontalLayout(convertTopologyToFlow(settings.topology));\n    const [elements, setElements] = useState(initialElements);\n\n    useEffect(() => {\n        let newElements = convertTopologyToFlow(settings.topology, settings.topologyShowStores);\n        if (settings.topologyCompact) {\n            newElements = compactTopology(newElements);   \n        } \n        setElements(horizontalLayout(newElements));\n    }, [settings, setElements])\n\n    useEffect(() => {\n        if (settings.offsetCheck) {\n            const id = setInterval(() => {\n                let topics = getTopicsFromElements(elements);\n\n                topics.forEach(topic => {\n                    getOffset(settings.offsetUrl, topic)\n                        .then((response) => response.json())\n                        .then((offset) => {\n                            setElements((elements) =>\n                                updateEdges(updateTopics(elements, topic, offset), topic)\n                            );\n                        })\n                        .catch(() => {\n                            clearInterval(id);\n                            onError(`Failed to load offset for topic ${topic}`);\n                        })\n                });\n            }, settings.offsetInterval);\n\n            return () => clearInterval(id);\n        }\n    }, [elements, setElements, settings, onError]);\n\n    return (\n        <div style={{ height: 600 }} className=\"flow-area\">\n            <ReactFlow elements={elements} />\n        </div>\n    )\n}\n\nexport default Flow;","import './Toolbar.css';\nimport { FiMaximize, FiMinimize, FiSettings } from \"react-icons/fi\";\nimport ReactTooltip from 'react-tooltip';\n\nfunction Toolbar({ onSetttingsClicked, onCompactClicked, isCompact }) {\n\n    return (\n        <div className=\"float-end toolbar\">\n\n            <ReactTooltip id=\"tooltip-compact\"\n                place=\"left\"\n                effect=\"solid\"\n                type=\"light\"\n                border\n                borderColor=\"lightgrey\">\n\n                {isCompact ? \"Expand topology\" : \"Compact topology\"}\n            </ReactTooltip>\n\n            <span className=\"toolbar-icon\" data-tip data-for=\"tooltip-compact\">\n                {isCompact ?\n                    <FiMaximize onClick={onCompactClicked} data-testid=\"expand-topology\"/> :\n                    <FiMinimize onClick={onCompactClicked} data-testid=\"compact-topology\"/>\n                }\n            </span>\n            <span className=\"toolbar-icon\">\n                <FiSettings onClick={onSetttingsClicked} />\n            </span>\n        </div>\n    )\n}\n\nexport default Toolbar;","import './Header.css';\nimport Toolbar from './Toolbar.js';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nfunction Header({ settings, onSettingChanged }) {\n    const history = useHistory();\n    const location = useLocation();\n\n    const onSetttingsClicked = () => {\n        if (location.pathname.includes('settings')) {\n            history.push('/');\n        } else {\n            history.push('/settings');\n        }\n    }\n\n    const onToggleCompact = () => {\n        onSettingChanged('topologyCompact', !settings.topologyCompact);\n    }\n\n    return (\n        <div className=\"mt-1 mb-4\">\n            <header className=\"row\">\n                <div className=\"col-md-11 title\">\n                    Kafka Flow\n                </div>\n                <div className=\"col-md-1 title\">\n                    <Toolbar onSetttingsClicked={onSetttingsClicked} onCompactClicked={onToggleCompact} isCompact={settings.topologyCompact} />\n                </div>\n                <div className=\"col-md-12 subtitle\">\n                    Visualize the data flowing through a kafka streams topology\n                </div>\n            </header>\n        </div>\n    )\n}\n\nexport default Header;","async function getTopology(url) {\n    return fetch(url)\n}\n\nexport default getTopology;","import React from 'react';\nimport getTopology from '../kafka/topology-service.js';\n\nfunction Settings({ settings, onSettingChanged, onError }) {\n\n    const onChangeSetting = (e) => {\n        const key = e.target.id;\n        const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\n        onSettingChanged(key, value)\n    }\n\n    const onLoadTopology = () => {\n        getTopology(settings.topologyUrl)\n            .then((response) => response.text())\n            .then((loadedTopology) => {\n                onSettingChanged('topology', loadedTopology);\n            })\n            .catch(() => onError('Failed to load topology'))\n    }\n\n    return (\n        <form>\n            <h5>Topology</h5>\n\n            <div className=\"form-group mb-2\">\n                <label htmlFor=\"topology\">Topology Description</label>\n                <textarea\n                    rows=\"10\"\n                    className=\"form-control\"\n                    placeholder=\"Topology\"\n                    id=\"topology\"\n                    value={settings.topology}\n                    onChange={onChangeSetting}\n                />\n            </div>\n\n            <div className=\"form-group mb-2\">\n                <label htmlFor=\"topologyUrl\">Topology URL</label>\n                <div className=\"input-group\">\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"URL to Topology Describe (optional)\"\n                        id=\"topologyUrl\"\n                        value={settings.topologyUrl}\n                        onChange={onChangeSetting}\n                    />\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-outline-primary\"\n                        id=\"topologyLoad\"\n                        disabled={!settings.topologyUrl}\n                        onClick={onLoadTopology}>\n                        Load Topology\n                    </button>\n                </div>\n            </div>\n\n            <div className=\"form-check mb-2\">\n                <label className=\"form-check-label\" htmlFor=\"offsetCheck\">Show internal Stores</label>\n                <input\n                    type=\"checkbox\"\n                    className=\"form-check-input\"\n                    id=\"topologyShowStores\"\n                    checked={settings.topologyShowStores}\n                    onChange={onChangeSetting}\n                />\n            </div>\n\n            <h5 className=\"mt-5\">Offsets</h5>\n            \n            <div className=\"form-check mb-2\">\n                <label className=\"form-check-label\" htmlFor=\"offsetCheck\">Enable Offset Polling</label>\n                <input\n                    type=\"checkbox\"\n                    className=\"form-check-input\"\n                    id=\"offsetCheck\"\n                    checked={settings.offsetCheck}\n                    onChange={onChangeSetting}\n                />\n            </div>\n\n            <div className=\"form-group mb-2\">\n                <label htmlFor=\"offsetUrl\">Offset URL</label>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"URL to load Offsets (optional)\"\n                    id=\"offsetUrl\"\n                    value={settings.offsetUrl}\n                    onChange={onChangeSetting}\n                    disabled={!settings.offsetCheck}\n                />\n            </div>\n\n            <div className=\"form-group mb-2\">\n                <label htmlFor=\"offsetInterval\">Offset Interval (ms)</label>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"URL to load Offsets (optional)\"\n                    id=\"offsetInterval\"\n                    value={settings.offsetInterval}\n                    onChange={onChangeSetting}\n                    disabled={!settings.offsetCheck}\n                />\n            </div>\n        </form>\n    )\n}\n\nexport default Settings;","import './App.css';\nimport React, { useState } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport Flow from './components/Flow.js';\nimport Header from './components/Header.js';\nimport Settings from './components/Settings.js';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport example from './topology/topology-example.json';\n\nfunction App() {\n\n  const [settings, setSettings] = useState({\n    topology: example.simple,\n    topologyUrl: \"\",\n    topologyCompact: false,\n    topologyShowStores: true,\n    offsetUrl: \"\",\n    offsetInterval: 2000,\n    offsetCheck: false\n  });\n\n  const onSettingChanged = (key, value) => {\n    setSettings({ ...settings, [key]: value });\n  }\n\n  const onError = (message) => {\n    toast.error(message);\n  }\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"container-fluid\">\n        <Toaster />\n        <Header settings={settings} onSettingChanged={onSettingChanged} />\n        <Switch>\n          <Route path=\"/settings\">\n            <Settings settings={settings} onSettingChanged={onSettingChanged} onError={onError} />\n          </Route>\n          <Route path=\"/\">\n            <Flow settings={settings} onError={onError} />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}